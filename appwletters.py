import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
#streamlit run appwletters.py

st.set_page_config(page_title="–ö–∞—Ç–µ–≥–æ—Ä—ñ–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑", layout="wide")
st.title("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏—á–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ–∞–ª—å–Ω–∏—Ö (—Ç–µ–∫—Å—Ç–æ–≤–∏—Ö) –¥–∞–Ω–∏—Ö")

st.header("1Ô∏è‚É£ –í–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö")
data_input = st.text_area(
    "–í–≤–µ–¥–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —á–µ—Ä–µ–∑ –∫–æ–º—É –∞–±–æ –ø—Ä–æ–±—ñ–ª:",
    height=100,
    placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –∞, b, c, a, b, a, d"
)

uploaded_file = st.file_uploader(
    "–ê–±–æ –∑–∞–≤–∞–Ω—Ç–∞–∂ CSV-—Ñ–∞–π–ª –∑ –æ–¥–Ω–∏–º —Å—Ç–æ–≤–ø—Ü–µ–º –∫–∞—Ç–µ–≥–æ—Ä—ñ–π",
    type=["csv"]
)

data = []
if uploaded_file:
    df = pd.read_csv(uploaded_file)
    data = df.iloc[:, 0].dropna().astype(str).tolist()
elif data_input:
    data = data_input.replace(",", " ").split()
    data = [val.strip() for val in data if val.strip() != ""]

if data:
    n = len(data)
    st.success(f"–£—Å–ø—ñ—à–Ω–æ –∑—á–∏—Ç–∞–Ω–æ {n} –∑–Ω–∞—á–µ–Ω—å.")
    
    # --- –¢–∞–±–ª–∏—Ü—è —á–∞—Å—Ç–æ—Ç ---
    st.header("2Ô∏è‚É£ –¢–∞–±–ª–∏—Ü—ñ —á–∞—Å—Ç–æ—Ç –∫–∞—Ç–µ–≥–æ—Ä—ñ–π")
    values, counts = np.unique(data, return_counts=True)
    rel_freqs = counts / n
    cum_freqs = np.cumsum(counts)
    rel_cum_freqs = np.cumsum(rel_freqs)
    
    df_stats = pd.DataFrame({
        "–ß–∞—Å—Ç–æ—Ç–∞ (n·µ¢)": counts,
        "–í—ñ–¥–Ω–æ—Å–Ω–∞ —á–∞—Å—Ç–æ—Ç–∞ (n·µ¢/n)": rel_freqs,
        "–ù–∞–∫–æ–ø–∏—á—É–≤–∞–ª—å–Ω–∞ —á–∞—Å—Ç–æ—Ç–∞": cum_freqs,
        "–í—ñ–¥–Ω–æ—Å–Ω–∞ –Ω–∞–∫–æ–ø–∏—á—É–≤–∞–ª—å–Ω–∞ —á–∞—Å—Ç–æ—Ç–∞": rel_cum_freqs
    }, index=values)
    
    df_stats_transposed = df_stats.T
    st.dataframe(df_stats_transposed, use_container_width=True)
    
    # --- –ì—Ä–∞—Ñ—ñ–∫ —á–∞—Å—Ç–æ—Ç ---
    st.header("3Ô∏è‚É£ –ì—Ä–∞—Ñ—ñ–∫ —á–∞—Å—Ç–æ—Ç –∫–∞—Ç–µ–≥–æ—Ä—ñ–π")
    fig, ax = plt.subplots(figsize=(6, 4))
    ax.bar(values, counts, color='skyblue')
    ax.set_title("–ß–∞—Å—Ç–æ—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π")
    ax.set_xlabel("–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó")
    ax.set_ylabel("–ß–∞—Å—Ç–æ—Ç–∞")
    ax.grid(axis='y')
    plt.xticks(rotation=45, ha='right')
    st.pyplot(fig)
    
    #–ï–º–ø—ñ—Ä–∏—á–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
    st.header("4Ô∏è‚É£ –ï–º–ø—ñ—Ä–∏—á–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ä–æ–∑–ø–æ–¥—ñ–ª—É")
    fig2, ax2 = plt.subplots(figsize=(6, 4))
    ax2.step(np.arange(len(values)), rel_cum_freqs, where='post', label='–ï–º–ø—ñ—Ä–∏—á–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è')
    ax2.set_xticks(np.arange(len(values)))
    ax2.set_xticklabels(values, rotation=45, ha='right')
    ax2.set_ylim(0, 1.05)
    ax2.set_xlabel("–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó")
    ax2.set_ylabel("F(x)")
    ax2.set_title("–ï–º–ø—ñ—Ä–∏—á–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ä–æ–∑–ø–æ–¥—ñ–ª—É (–Ω–∞–∫–æ–ø–∏—á—É–≤–∞–ª—å–Ω–∞ –≤—ñ–¥–Ω–æ—Å–Ω–∞ —á–∞—Å—Ç–æ—Ç–∞)")
    ax2.grid(True)
    st.pyplot(fig2)
    
    # --- –ß–∏—Å–ª–æ–≤—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π ---
    st.header("5Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö")
    mode = values[np.argmax(counts)]
    unique_count = len(values)
    
    st.markdown(f"""
    - üìå **–ú–æ–¥–∞ (–Ω–∞–π–ø–æ—à–∏—Ä–µ–Ω—ñ—à–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è):** {mode}
    - üìå **–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π:** {unique_count}
    - üìå **–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–Ω–∞—á–µ–Ω—å:** {n}
    """)
else:
    st.info("–í–≤–µ–¥–∏ –∞–±–æ –∑–∞–≤–∞–Ω—Ç–∞–∂ –∫–∞—Ç–µ–≥–æ—Ä—ñ–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏.")
    #hi this is ivan
